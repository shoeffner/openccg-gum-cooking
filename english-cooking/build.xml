<!-- ====================================================================================
Title:       build.xml
Copyright:   Copyright (c) 2008 SFB-TR 8. All rights reserved.
Licence:     This file is free software; you can redistribute it and/or modify
             it under the terms of the GNU Lesser General Public License as published by
             the Free Software Foundation; either version 2.1, or (at your option)
             any later version.

             This file is distributed in the hope that it will be useful,
             but  WITHOUT ANY WARRANTY; without even the implied warranty of
             MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
             GNU Lesser General Public License for more details.

             You should have received a copy of the GNU Lesser General Public License
             along with Agent Factory; see the file COPYING.  If not, write to
             the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
             Boston, MA 02111-1307, USA.
======================================================================================== -->

<!-- ====================================================================================
 
 A build file based on Mike White's original build file organisation. Extended to provide 
 functionality to automatically test against all the testbeds, plus functionality to build
 a distribution zip file from the grammar source. 
 
 Author : Rob Ross 
 
======================================================================================== -->
<project default="usage" basedir=".">
  
  <!-- =================================================================== -->
  <!-- target                                               -->
  <!-- =================================================================== -->
  <target name="init">
    <tstamp/>
    <property name="Name" value="OpenCCG"/>
    <property name="name" value="openccg"/>
    
    <echo message="----------- ${Name} ------------"/>
  	
    <property environment="env"/>
    	
  	<property name="here" location="."/>
  	<property name="release.dir"  location="${here}/diaspace-english"/>
    <property name="openccg.home" value="${env.OPENCCG_HOME}"/>
    <property name="lib.dir" location="${openccg.home}/lib"/>
    <property name="grammars.dir" location="${openccg.home}/grammars"/>
    <property name="local.classpath" location="${lib.dir}/xercesImpl.jar;
    	                                       ${lib.dir}/${name}.jar"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- usage message                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="OpenCCG grammar build file for the DiaSpace English Grammar"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" Available targets are:"/>
    <echo message=""/>
    <echo message="   grammar     --> validate source files and build the grammar"/>
    <echo message="   distribute  --> build a distribution zip file for the website."/>  	
    <echo message=""/>
    <echo message=" See the comments inside the build.xml file for more details."/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=""/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Builds grammar                                                     -->
  <!-- =================================================================== -->
  <target name="grammar" depends="init" description="builds grammar">
    <echo message="Validating grammar.xml, lexicon.xml, morph.xml, rules.xml and types.xml"/>
    <java classname="opennlp.ccg.test.Validator" classpath="${local.classpath}" fork="true">
      <arg value="grammar.xml"/>
      <arg value="lexicon.xml"/>
      <arg value="morph.xml"/>
      <arg value="rules.xml"/>
      <arg value="types.xml"/>
    </java>
  </target>
	
	  <!-- ======================================================== -->
	  <!--                        Clean Up                          -->
	  <!-- ======================================================== -->
	  <target name="clean" depends="init"
	        description="clean up" >
	    <delete dir="${build-classes}"/>
	    <delete dir="${ide-classes}"/>
	    <delete dir="${release-main}/lib"/>    
	    <delete dir="${release-main}/etc"/>    
	    <delete dir="${release-main}/doc"/>    
	    <delete dir="${release-main}"/>    
	    <delete dir="${release-temp}"/>    
	    <delete dir="${release}"/>    
	    <delete dir="${javadoc.dir}"/> 
	  </target>

	  <!-- ======================================================== -->
	  <!--          Create the Release Directory Structure          -->
	  <!-- ======================================================== -->
	  <target name="release-init" depends="clean"
	        description="Building the release directory structure">
	    <mkdir dir="${release.dir}"/>
	  </target>	
	
	  <!-- ======================================================== -->
	  <!--                Copy Over all Resources                   -->
	  <!-- ======================================================== -->
	  <target name="copy-release" depends="release-init"
	        description="Copying Over All Resources">
	  	<copy file="build.xml" todir="${release.dir}"/>
	  	<copy file="grammar.xml" todir="${release.dir}"/>
	  	<copy file="lexicon.xml" todir="${release.dir}"/>
	  	<copy file="n.4bo" todir="${release.dir}"/>
	  	<copy file="morph.xml" todir="${release.dir}"/>
	  	<copy file="Readme.txt" todir="${release.dir}"/>
	  	<copy file="rules.xml" todir="${release.dir}"/>
	  	<copy file="testbed-gum.xml" todir="${release.dir}"/>
	  	<copy file="testbed-development.xml" todir="${release.dir}"/>
	    <copy file="testbed-corpus.xml" todir="${release.dir}"/>	  	
	  	<copy file="types.xml" todir="${release.dir}"/>	  	
	  </target>
	
	  <!-- ======================================================== -->
	  <!--                    Zip Up the Release                    -->
	  <!-- ======================================================== -->
	  <target name="zip-release" depends="copy-release"
	        description="Zipping up the Release">
	    <zip destfile="${here}/diaspace-english.zip"
	       basedir="${release.dir}"
	    />
	  </target>

	  <!-- ======================================================== -->
	  <!--       Build a release (Clean Up)                         -->
	  <!-- ======================================================== -->
	  <target name="distribute" depends="zip-release"
	         description="Cleaning away temp files">
	        <delete dir="${release.dir}"/>
	  </target>

</project>
